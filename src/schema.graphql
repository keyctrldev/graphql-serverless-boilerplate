type Claim {
  claimStatus: String
  medicationName: String
  claimId: String
  claimDate: String
  medicationCost: Int
  planPaid: Int
  memberPaid: Int
  memberId: String
}

# This object specifically users aws cognito for user signup so named it cognito user 
type CognitoUser {
  username: String!
  email: String!
  memberId: String
  groupNumber: String
  dob: String
  firstName: String!
  lastName: String!
  insuranceProvider: String
  mobileNumber: String!
  streetAddress: String
  apartmentNumber: String
  zipCode: String
  city: String
  state: String
}
scalar JSON
type CognitoUserRegistrationResponse{
  username:String
  UserConfirmed: Boolean
  UserSub: String
  CodeDeliveryDetails:JSON
}

type CognitoUserConfirmationResponse {
  status:Int
  message:String
}

type CognitoUserConfirmation {
ConfirmationCode:String!
Username:String!
}

type Tokens {
  accessToken: String
  idToken: String
  refreshToken: String
}


type SignInResponse {
  message: String
  customData: JSON
  tokens: Tokens
}
type SignOutResponse {
  message: String!
  error: JSON
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  phone: String!
}

type Query {
  claims(memberId: String!): [Claim]
  User(id: ID!): User
  Users: [User]
  signUp(
    username: String!
    password: String!
    email: String!
    memberId: String
    groupNumber: String
    dob: String
    firstName: String!
    lastName: String!
    insuranceProvider: String
    mobileNumber: String!
    streetAddress: String
    apartmentNumber: String
    zipCode: String
    city: String
    state: String
  ): CognitoUserRegistrationResponse

  signIn(username: String!, password: String!): SignInResponse

  signOut(token: String!): SignOutResponse

  comfirmCognitoUser(username:String!,ConfirmationCode:String!):CognitoUserConfirmationResponse
}

type Mutation {
  createUser(
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    phone: String!
  ): User
}
