type Claim {
  claimStatus: String
  medicationName: String
  claimId: String
  claimDate: String
  medicationCost: Int
  planPaid: Int
  memberPaid: Int
  memberId: String
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  phone: String!
}

type Query {
  claims(memberId: String!): [Claim]
  User(id: ID!): User
  Users: [User]
  userProfileInfo(memberId: ID!): ProfileInfoResponse!
  # signIn(username: String!, password: String!): SignInResponse
  # signOut(token: String!): SignOutResponse
  # comfirmCognitoUser(username:String!,confirmationCode:String!):CognitoUserConfirmationResponse
}

type Mutation {
  createUser(
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    phone: String!
  ): User
  updateUserProfile(input: updateUserProfileInput!): updateUserProfileResponse!
  signUp(input: SignUpInput!): SignUpResponse
}

input updateUserProfileInput {
  """
  This is the memberId for a member
  """
  memberId: String!
  """
  agreementAcceptance is know whether the member accepted to the agreement
  """
  agreementAcceptance: Boolean!
}

type updateUserProfileResponse {
  message: String!
  success: Boolean!
}

type lookUpResponse {
  message: String!
  status: String!
}

input SignUpInput {
  username: String!
  """
  This is the memberId for a member
  """
  memberId: ID!
  """
  This is the groupNumber for a member
  """
  groupNumber: String!
  """
  Date of birth of the member
  """
  dob: String!
  """
  First Name of the member
  """
  firstName: String!
  """
  Last Name of the member
  """
  lastName: String!
  """
  Email Id of the member
  """
  email: String!
  """
  password
  """
  password: String!
  """
  Insurance Provider of the member
  """
  insuranceProvider: String!
  """
  Mobile Number of the member
  """
  mobileNumber: String!
  """
  Address of the member
  """
  address: AddressInput!
}

input AddressInput {
  """
  Street Address of the member
  """
  streetAddress: String!
  """
  Apartment Number of the member
  """
  apartmentNumber: String
  """
  Zipcode of the place member belongs to
  """
  zipCode: String!
  """
  Name of the City member belongs to
  """
  city: String!
  """
  Name of the State member belongs to
  """
  state: String!
}

type SignUpResponse {
  success: Boolean!
  message: String!
}

type ProfileInfoResponse {
  memberId: ID!
  groupNumber: String
  mobileNumber: String
  address: AddressInfo
}

# Address information structure
type AddressInfo {
  streetAddress: String!
  apartmentNumber: String
  zipCode: String!
  city: String!
  state: String!
}

type CognitoUser {
  username: String!
  email: String!
  memberId: String
  groupNumber: String
  dob: String
  firstName: String!
  lastName: String!
  insuranceProvider: String
  mobileNumber: String!
  streetAddress: String
  apartmentNumber: String
  zipCode: String
  city: String
  state: String
}
scalar JSON
type CognitoUserRegistrationResponse {
  username: String
  userConfirmed: Boolean
  userSub: String
  codeDeliveryDetails: JSON
}

type CognitoUserConfirmationResponse {
  status: Int
  message: String
}

type CognitoUserConfirmation {
  confirmationCode: String!
  username: String!
}

type Tokens {
  accessToken: String
  idToken: String
  refreshToken: String
}

type SignInResponse {
  message: String
  customData: JSON
  tokens: Tokens
}
type SignOutResponse {
  message: String!
  error: JSON
}
